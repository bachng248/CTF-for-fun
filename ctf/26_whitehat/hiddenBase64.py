# writeup: https://inshallhack.org/paddinganography/

data = '''
TmjDosyjdCBLacyBIEN1zIlhIE1lzKN=
QmFvIG5nw6B5IE3hurkgbmfDs25nLCBiYW8gbmfDoHkgTeG6uSB0csO0bmcsIGJhbyBuZ8OgeSBN4bq5IG1vbmcgY29uIGNow6BvIMSR4budaSy=
4bqkcCB0cm9uZyDEkcOheSBsw7JuZywgY8OzIGNoxINuZyB0aeG6v25nIGPGsOG7nWkgY+G7p2EgbeG7mXQgaMOgaSBuaGkgxJFhbmcgbOG7m24gZOG6p24/
TeG6uSBjaOG7o3QgdOG7iW5oIGdp4bqlYywgdsOgIE3hurkgbmjDrG4gdGjhuqV5IGjDrG5oIGjDoGkgbmjhu48gYsOpIG5oxrAgdGhpw6puIHRo4bqnbix=
VGnhur9uZyBjb24ga2jDs2Mgb8OgLCBt4bqvdCBN4bq5IGzhu4cgbmjDsmEsIGPDoW0gxqFuIHbDrCBjb24gxJHhur9uIGLDqm4gTeG6uS4uLp==
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBuaOG6pXQgxJHhu51pIb==
Tmfhuq9tIGNvbiBuZ29hbiBu4bqxbSB0cm9uZyBuw7RpLCBt4bqvdCB4b2UgdHLDsm4sIMO0aSBiw6kgY8awbmch
TmjDrG4gQ2hhIGNvbiwgQ2hhIMSRYW5nIHLhuqV0IHZ1aSwgZ2nhu410IG7GsOG7m2MgbeG6r3QgbMSDbiB0csOqbiBraMOzZSBtw7RpLB==
Q29uIGjDo3kgbmjDrG4ga8OsYSwgQ2hhIMSRYW5nIGtow7NjIHbDrCBjb24uLi6=
TeG7mXQgbmfDoHkgdOG7iW5oIGdp4bqlYywgcuG7k2kgTeG6uSBjaOG7o3QgbmdoZSwgduG7pW5nIHbhu4EgY29uIG7Ds2kgY8OidToiTeG6uSDGoWkhIh==
Q2hp4bq/YyBtw7RpIGLDqSBuaOG7jyB0aOG7kXQgbMOqbiBi4bqldCBuZ+G7nSwga2hp4bq/biB0aW0gTeG6uSB2dWkgbmjGsCB24buhIMOyYS4uLm==
xJDDonkgbMOgIG3hurd0IMSR4bqldCwgbsOgeSBsw6AgdHLhu51pIGNhbywgxJHDonkgbMOgIG7GoWkgxJHDoyBzaW5oIHJhIGNvbix=
Qsaw4bubYyBjaMOibiBiw6kgbmjhu48gYsaw4bubYyDEkWkgdGhlbyBDaGEsIGLGsOG7m2MgY2jDom4gxJHhuqd1IHRpw6puIHRyw6puIMSRxrDhu51uZyDEkeG7nWkuLi7=
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBiaeG6v3QgYmFvIS==
SMOjeSBj4bupIMSRaSwgTeG6uSBiw6puIGNvbiwgZMO1aSB0aGVvIGNvbiB04burbmcgYsaw4bubYyBjaMOibi4uLg==
TmfDoHkgbWFpIHNhdSBraGkgY29uIGzhu5tuIGtow7RuLCDEkcaw4budbmcgxJHhu51pIGtow7RuZyBuaMawIGNvbiDGsOG7m2MgbcahLG==
SMOjeSDEkeG7qW5nIGzDqm4gdsOgIHbhu69uZyBixrDhu5tjIHRyw6puIMSRxrDhu51uZyB4YS4uLp==
TmfDoHkgxJHhuqd1IMSR4bq/biBs4bubcCwgTeG6uSBjw7luZyBjb24gxJFpLCBuZ+G6rXAgbmfhu6tuZyBjb24gYsaw4bubYyBzYXUgbMawbmcgTeG6uSx=
VGnhur9uZyB2ZSBjdeG7kWkgaMOoLCBow6F0IHZhbmcgxJHDs24gY2jDoG8sIMOhbmggbeG6t3QgdHLhu51pIHNvaSBjb24gxJHhur9uIHRyxrDhu51uZy4uLs==
TmfDoHkgbmfDoHkgxJHhur9uIGzhu5twLCBk4bqnbiBk4bqnbiBjb24gcXVlbiwgYuG6oW4gYsOoLCBUaOG6p3kgQ8O0IHnDqnUgdGjGsMahbmcgY29uLM==
QsOpIGNvbiBj4bunYSBN4bq5IHbhuqtuIGx1w7RuIGNoxINtIG5nb2FuLCBraGnhur9uIGNobyBN4bq5IHZ1aSBtw6NpIHRyb25nIGzDsm5nLi4u
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBy4bqldCBuaGnhu4F1IY==
Tmjhu69uZyBraHV5YSDDtG4gYsOgaSwgY29uIHRo4bupYywgeMOzdCB4YSB0aW0gTeG6uSBiaeG6v3QgYmFvIR==
VOG7q25nIGvhu7MgdGhpIG7hu5FpIHRp4bq/cCBuaGF1LCB0deG7lWkgdGjGoSBjb24gdHLDtGkgcXVhIHLhuqV0IG1hdSw=
xq/hu5tjIGNoaSBjb24gTeG6uSBtYWkgc2F1IHPhur0gdGjDoG5oIGPDtG5nLi4u
TeG7mXQgbmfDoHkgTeG6uSB0aOG6pXkgY29uIGPGsOG7nWkgdnUgdsahLCBu4bulIGjhu5NuZyBjb24gZ2nhuqV1IHRyb25nIG5nxINuIGLDoG4s
TMOhIHRoxrAgdmnhur90IHbhu5lpLCBjw7MgdMOqbiBy4bqldCBs4bqhLCBjaOG6r2MgbMOgIG5nxrDhu51pIGNvbiB0aMawxqFuZyBy4bqldCBuaGnhu4F1IZ==
TeG7mXQgbmfDoHkgTeG6uSB0aOG6pXkgY29uIGJ14buTbiB2dSB2xqEsIGPDoG5oIGjhu5NuZyB24bqrbiDhu58gdHJvbmcgbmfEg24gYsOgbix=
TMOhIMSRw6J1IMSRw6MgdsOgbmcsIGhvYSDEkcOidSDEkcOjIHTDoG4sIGPhu5sgc2FvIG5ow6xuIGNvbiDDumEgdGh1IHNhbmc/
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBy4bqldCBuaGnhu4F1IX==
Tmjhu69uZyBr4bu3IG5p4buHbSBs4bqnbiDEkeG6p3UgecOqdSwgc3Xhu5F0IG3hu5l0IMSR4budaSDEkcOidSBk4buFIHF1w6puLi4u
VuG6p25nIHRyxINuZyBraWEgc+G6vSBzxrDhu59pIOG6pW0gY29uLCB2w6Agc2F1IGPGoW4gbcawYSwgbuG6r25nIHPhur0gdHJvbmcs
U+G6vSBjw7MgbeG7mXQgbmfGsOG7nWkgecOqdSBjb24gaMahbiBN4bq5IHnDqnUuLi7=
TeG7mXQgbmfDoHkgY29uIGzhu5tuLCBt4buZdCBuZ8OgeSBjb24ga2jDtG4sIG3hu5l0IG5nw6B5IGNvbiBwaOG6o2kgxJFpIHhhIE3hurks
Qsaw4bubYyBjaMOibiB24buvbmcgdsOgbmcsIGtow7Mga2jEg24gY2jhurNuZyBtw6BuZywgYmnhu4NuIHLhu5luZyB0cuG7nWkgY2FvIGNvbiB24bqreSB2w7luZyx=
TeG7mXQgbmfDoHkgY2jhu6N0IG7huq9uZywgbeG7mXQgbmfDoHkgY2jhu6N0IG3GsGEsIGzDsm5nIE3hurkgY2jhu6N0IG5o4bubIGNvbiB2w7QgYuG7nSy=
Tmjhu5sgc2FvIGTDoW5nIGjDrG5oLCBuaOG7myBzYW8gbuG7pSBjxrDhu51pLCBuaOG7myBjb24gdOG7q25nIGdpw6J5IHBow7p0IGN14buZYyDEkeG7nWkuLi7=
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBuaOG6pXQgxJHhu51pIQ==
4bueIG7GoWkgcGjGsMahbmcgdHLhu51pIHhhIHjDtGksIGjDo3kgecOqbiB0w6JtLCBN4bq5IHbhuqtuIHZ1aSH=
VOG7q25nIGTDsm5nIHRoxrAgw7RtIGJhbyBuaOG7myB0aMawxqFuZywgTeG6uSBuaOG7nSBtw6J5IG1hbmcgdHJhbyDEkeG6v24gY29uLA==
Q2jDumMgY29uIHnDqnUgxJHGsOG7o2MgaOG6oW5oIHBow7pjLCBtw6NpIGLDrG5oIGFuLi4u
QmFvIG5nw6B5IE3hurkgbmfDs25nLCBiYW8gbmfDoHkgTeG6uSB0csO0bmcsIGJhbyBuZ8OgeSBN4bq5IG1vbmcgY29uIHF1YXkgduG7gSx=
4bqkcCB0cm9uZyDEkcOheSBsw7JuZywgbmjhu5sgYmFvIHRow6FuZyBuZ8OgeSBiw6kgY29uIGjhu5NuIG5oacOqbiBiw6puIGTDoW5nIE3hurks
TeG6uSBjaOG7o3QgdOG7iW5oIGdp4bqlYywgdsOgIE3hurkgbmjDrG4gdGjhuqV5LCBjb24gTeG6uSB24bqrbiBiw6kgbmjGsCB0aGnDqm4gdGjhuqduLN==
VGjhuqV5IGNvbiBraMOzYyBvw6AsIG3huq90IE3hurkgbOG7hyBuaG/DoCwgQ8OhbSDGoW4gdsOsIGNvbiDEkeG6v24gYsOqbiBN4bq5Li4uIJ==
TmjDosyjdCBLacyBIEN1zIlhIE1lzKO=
QmFvIG5nw6B5IE3hurkgbmfDs25nLCBiYW8gbmfDoHkgTeG6uSB0csO0bmcsIGJhbyBuZ8OgeSBN4bq5IG1vbmcgY29uIGNow6BvIMSR4budaSx=
4bqkcCB0cm9uZyDEkcOheSBsw7JuZywgY8OzIGNoxINuZyB0aeG6v25nIGPGsOG7nWkgY+G7p2EgbeG7mXQgaMOgaSBuaGkgxJFhbmcgbOG7m24gZOG6p24/
TeG6uSBjaOG7o3QgdOG7iW5oIGdp4bqlYywgdsOgIE3hurkgbmjDrG4gdGjhuqV5IGjDrG5oIGjDoGkgbmjhu48gYsOpIG5oxrAgdGhpw6puIHRo4bqnbix=
VGnhur9uZyBjb24ga2jDs2Mgb8OgLCBt4bqvdCBN4bq5IGzhu4cgbmjDsmEsIGPDoW0gxqFuIHbDrCBjb24gxJHhur9uIGLDqm4gTeG6uS4uLl==
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBuaOG6pXQgxJHhu51pIf==
Tmfhuq9tIGNvbiBuZ29hbiBu4bqxbSB0cm9uZyBuw7RpLCBt4bqvdCB4b2UgdHLDsm4sIMO0aSBiw6kgY8awbmch
TmjDrG4gQ2hhIGNvbiwgQ2hhIMSRYW5nIHLhuqV0IHZ1aSwgZ2nhu410IG7GsOG7m2MgbeG6r3QgbMSDbiB0csOqbiBraMOzZSBtw7RpLH==
Q29uIGjDo3kgbmjDrG4ga8OsYSwgQ2hhIMSRYW5nIGtow7NjIHbDrCBjb24uLi5=
TeG7mXQgbmfDoHkgdOG7iW5oIGdp4bqlYywgcuG7k2kgTeG6uSBjaOG7o3QgbmdoZSwgduG7pW5nIHbhu4EgY29uIG7Ds2kgY8OidToiTeG6uSDGoWkhIl==
Q2hp4bq/YyBtw7RpIGLDqSBuaOG7jyB0aOG7kXQgbMOqbiBi4bqldCBuZ+G7nSwga2hp4bq/biB0aW0gTeG6uSB2dWkgbmjGsCB24buhIMOyYS4uLn==
xJDDonkgbMOgIG3hurd0IMSR4bqldCwgbsOgeSBsw6AgdHLhu51pIGNhbywgxJHDonkgbMOgIG7GoWkgxJHDoyBzaW5oIHJhIGNvbiz=
Qsaw4bubYyBjaMOibiBiw6kgbmjhu48gYsaw4bubYyDEkWkgdGhlbyBDaGEsIGLGsOG7m2MgY2jDom4gxJHhuqd1IHRpw6puIHRyw6puIMSRxrDhu51uZyDEkeG7nWkuLi5=
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBiaeG6v3QgYmFvIb==
SMOjeSBj4bupIMSRaSwgTeG6uSBiw6puIGNvbiwgZMO1aSB0aGVvIGNvbiB04burbmcgYsaw4bubYyBjaMOibi4uLl==
TmfDoHkgbWFpIHNhdSBraGkgY29uIGzhu5tuIGtow7RuLCDEkcaw4budbmcgxJHhu51pIGtow7RuZyBuaMawIGNvbiDGsOG7m2MgbcahLL==
SMOjeSDEkeG7qW5nIGzDqm4gdsOgIHbhu69uZyBixrDhu5tjIHRyw6puIMSRxrDhu51uZyB4YS4uLt==
TmfDoHkgxJHhuqd1IMSR4bq/biBs4bubcCwgTeG6uSBjw7luZyBjb24gxJFpLCBuZ+G6rXAgbmfhu6tuZyBjb24gYsaw4bubYyBzYXUgbMawbmcgTeG6uSy=
VGnhur9uZyB2ZSBjdeG7kWkgaMOoLCBow6F0IHZhbmcgxJHDs24gY2jDoG8sIMOhbmggbeG6t3QgdHLhu51pIHNvaSBjb24gxJHhur9uIHRyxrDhu51uZy4uLt==
TmfDoHkgbmfDoHkgxJHhur9uIGzhu5twLCBk4bqnbiBk4bqnbiBjb24gcXVlbiwgYuG6oW4gYsOoLCBUaOG6p3kgQ8O0IHnDqnUgdGjGsMahbmcgY29uLF==
QsOpIGNvbiBj4bunYSBN4bq5IHbhuqtuIGx1w7RuIGNoxINtIG5nb2FuLCBraGnhur9uIGNobyBN4bq5IHZ1aSBtw6NpIHRyb25nIGzDsm5nLi4u
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBy4bqldCBuaGnhu4F1If==
Tmjhu69uZyBraHV5YSDDtG4gYsOgaSwgY29uIHRo4bupYywgeMOzdCB4YSB0aW0gTeG6uSBiaeG6v3QgYmFvIT==
VOG7q25nIGvhu7MgdGhpIG7hu5FpIHRp4bq/cCBuaGF1LCB0deG7lWkgdGjGoSBjb24gdHLDtGkgcXVhIHLhuqV0IG1hdSz=
xq/hu5tjIGNoaSBjb24gTeG6uSBtYWkgc2F1IHPhur0gdGjDoG5oIGPDtG5nLi4u
TeG7mXQgbmfDoHkgTeG6uSB0aOG6pXkgY29uIGPGsOG7nWkgdnUgdsahLCBu4bulIGjhu5NuZyBjb24gZ2nhuqV1IHRyb25nIG5nxINuIGLDoG4s
TMOhIHRoxrAgdmnhur90IHbhu5lpLCBjw7MgdMOqbiBy4bqldCBs4bqhLCBjaOG6r2MgbMOgIG5nxrDhu51pIGNvbiB0aMawxqFuZyBy4bqldCBuaGnhu4F1IQ==
TeG7mXQgbmfDoHkgTeG6uSB0aOG6pXkgY29uIGJ14buTbiB2dSB2xqEsIGPDoG5oIGjhu5NuZyB24bqrbiDhu58gdHJvbmcgbmfEg24gYsOgbiz=
TMOhIMSRw6J1IMSRw6MgdsOgbmcsIGhvYSDEkcOidSDEkcOjIHTDoG4sIGPhu5sgc2FvIG5ow6xuIGNvbiDDumEgdGh1IHNhbmc/
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBy4bqldCBuaGnhu4F1IT==
Tmjhu69uZyBr4bu3IG5p4buHbSBs4bqnbiDEkeG6p3UgecOqdSwgc3Xhu5F0IG3hu5l0IMSR4budaSDEkcOidSBk4buFIHF1w6puLi4u
VuG6p25nIHRyxINuZyBraWEgc+G6vSBzxrDhu59pIOG6pW0gY29uLCB2w6Agc2F1IGPGoW4gbcawYSwgbuG6r25nIHPhur0gdHJvbmcs
U+G6vSBjw7MgbeG7mXQgbmfGsOG7nWkgecOqdSBjb24gaMahbiBN4bq5IHnDqnUuLi4=
TeG7mXQgbmfDoHkgY29uIGzhu5tuLCBt4buZdCBuZ8OgeSBjb24ga2jDtG4sIG3hu5l0IG5nw6B5IGNvbiBwaOG6o2kgxJFpIHhhIE3hurks
Qsaw4bubYyBjaMOibiB24buvbmcgdsOgbmcsIGtow7Mga2jEg24gY2jhurNuZyBtw6BuZywgYmnhu4NuIHLhu5luZyB0cuG7nWkgY2FvIGNvbiB24bqreSB2w7luZyw=
TeG7mXQgbmfDoHkgY2jhu6N0IG7huq9uZywgbeG7mXQgbmfDoHkgY2jhu6N0IG3GsGEsIGzDsm5nIE3hurkgY2jhu6N0IG5o4bubIGNvbiB2w7QgYuG7nSw=
Tmjhu5sgc2FvIGTDoW5nIGjDrG5oLCBuaOG7myBzYW8gbuG7pSBjxrDhu51pLCBuaOG7myBjb24gdOG7q25nIGdpw6J5IHBow7p0IGN14buZYyDEkeG7nWkuLi4=
TsOgeSBjb24gecOqdSDGoWksIGNvbiBiaeG6v3Qga2jDtG5nPyBN4bq5IHnDqnUgY29uLCB5w6p1IGNvbiBuaOG6pXQgxJHhu51pIQ==
4bueIG7GoWkgcGjGsMahbmcgdHLhu51pIHhhIHjDtGksIGjDo3kgecOqbiB0w6JtLCBN4bq5IHbhuqtuIHZ1aSE=
VOG7q25nIGTDsm5nIHRoxrAgw7RtIGJhbyBuaOG7myB0aMawxqFuZywgTeG6uSBuaOG7nSBtw6J5IG1hbmcgdHJhbyDEkeG6v24gY29uLA==
Q2jDumMgY29uIHnDqnUgxJHGsOG7o2MgaOG6oW5oIHBow7pjLCBtw6NpIGLDrG5oIGFuLi4u
QmFvIG5nw6B5IE3hurkgbmfDs25nLCBiYW8gbmfDoHkgTeG6uSB0csO0bmcsIGJhbyBuZ8OgeSBN4bq5IG1vbmcgY29uIHF1YXkgduG7gSw=
4bqkcCB0cm9uZyDEkcOheSBsw7JuZywgbmjhu5sgYmFvIHRow6FuZyBuZ8OgeSBiw6kgY29uIGjhu5NuIG5oacOqbiBiw6puIGTDoW5nIE3hurks
TeG6uSBjaOG7o3QgdOG7iW5oIGdp4bqlYywgdsOgIE3hurkgbmjDrG4gdGjhuqV5LCBjb24gTeG6uSB24bqrbiBiw6kgbmjGsCB0aGnDqm4gdGjhuqduLA==
VGjhuqV5IGNvbiBraMOzYyBvw6AsIG3huq90IE3hurkgbOG7hyBuaG/DoCwgQ8OhbSDGoW4gdsOsIGNvbiDEkeG6v24gYsOqbiBN4bq5Li4uIA==
aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1LR1dKQ0FjNGtHZw==
'''

data2 = 'jeqgc3jameqgmyloebxwmidunbssaq3imvwhgzlbebdeglbabjqw4zbairuwi2lfoiqei4tpm5rgcidnpeqgmylwn5zgs5dfebtg633umjqwy3baobwgc6lfoi======'
# -*- coding: utf-8 -*-
from gmpy import lcm
from math import log, ceil

# Providing the alphabets because I'm nice.
base64_alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
base32_alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"

def extract_data_from_message(message, base_charset=base64_alphabet, sep='\n', pad='=', L=8):
    split_message = message.split(sep)

    # Number of bits used to represent each value using the chosen charset.
    nb_bits = int(ceil(log(len(base_charset), 2)))

    # Length of a properly padded encoded string in bits.
    word_len = lcm(nb_bits, L)

    # Number of characters needed for a properly encoded string.
    nb_chars = word_len / nb_bits

    # Will contain the resulting binary string
    result = ''

    # Number of unused bits depending on the number of padding characters.
    ub_pad = {n: (word_len - n * nb_bits) % L for n in range(nb_chars)}

    for string in split_message:
        if len(string) % (nb_chars) != 0:
            print('Padding error: ' + string)
            print('Skipping...')
            continue

        # Length of the padding in bytes.
        padding = string.count(pad)

        if padding == 0:
            continue

        # Last encoding char of the string, containing useless bits.
        last_char = string[string.index(pad) - 1]

        # Binary value of the last character, left-padded with zeroes.
        bin_val = bin(base_charset.index(last_char))[2:].zfill(nb_bits)

        # Concatenating the bytes here
        result += bin_val[-ub_pad[padding]:]

    return ''.join([chr(int(result[i:i + 8], 2)) for i in range(0, len(result), 8)])

print extract_data_from_message(data)
